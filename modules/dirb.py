#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import re
from core.constants import EX, EXTERNAL
from core.helper import logger_class
from core.module import Module


class DirbModule(Module):
    _type = [EX]
    _services = ["http", "https"]
    _target_type = EXTERNAL
    _defaults = {
        "cookie": "",
        "agent": "",
        "case-insensitive": False,
        "common_word_list": ""
        }
    _extension = ".txt"

    def run(self):
        # Scan each service & port in payload
        for port in self._payload["ports"]:
            logger_class(self, f"Scanning port: {port[0]} on service {port[1]}", "info")

            cmd = ["dirb", f"{port[1]}://{self._target}:{port[0]}", self._config["common_word_list"]]

            # Read settings, set cmd
            for key, value in self.config().items():
                if(key == "cookie" and value != ""):
                    cmd.extend("-c", value)
                elif(key == "agent" and value != ""):
                    cmd.extend("-a", value)
                elif(key == "case-insensitive" and value == "True"):
                    cmd.append("-i")

            # Add output
            cmd.extend(["-o", self._tmpfile_loc()])

            # Perform scan
            self.run_cmd(cmd)

    def parse(self):
        res = {}
        target_loc = f"{os.getcwd()}/targets/{self._target}/results"

        if os.path.exists(f"{target_loc}/dirb_result.txt"):
            with open(f"{target_loc}/dirb_result.txt", "r") as f:
                for line in f.readlines():
                    if line.startswith("+"):
                        line_split = line.split(" ")[1:]

                        # Check if port is in res
                        ip_port = re.search(r"\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}:[0-9]+", line_split[0]).group().split(":")
                        ip = ip_port[0]
                        port = ip_port[1]
                        service = re.search(r"([A-z]+:\/\/)", line_split[0]).group().replace("://", "")

                        if port not in res:
                            res[port] = {
                                "service": service,
                                "result": []
                            }

                        # Add result
                        directory = line_split[0].replace(f"{service}://{ip}:{port}", "")


                        add_dict = {}

                        # add options
                        for option in re.findall(r"([A-z]+:[0-9]+)\w+", line_split[1]):
                            option_split = option.split(":")

                            add_dict[option_split[0]] = option_split[1]
                        
                        add_dict["dir"] = directory

                        res[port]["result"].append(add_dict)

            with open(f"{target_loc}/dirb_result.json", "w+") as f:
                f.write(json.dumps(res, indent=4, sort_keys=True))

    def init(self):
        if self.config()["common_word_list"] == "":
            self.set_config("common_word_list", self._tool_config["common_word_list"])