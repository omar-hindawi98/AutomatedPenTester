#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
from turtle import color
from core.helper import get_linpeas_result
from core.constants import EX, INTERNAL
from core.module import Module


class BinsexploitsModule(Module):
    _type = [EX]
    _services = []
    _target_type = INTERNAL
    _defaults = {}
    _extension = ".json"

    def run(self):
        # TODO: Implement this
        # Implementera 1-2 exploits?
        # https://gtfobins.github.io/


        # Suid executable
        # https://www.pentestpartners.com/security-blog/exploiting-suid-executables/


        ## CRON JOB EXPLOIT
        # https://payatu.com/guide-linux-privilege-escalation

        result = []

        # Import the linpeas as jsonfile and get relevent data
        json_load = get_linpeas_result(self._target)
        data = json_load['Interesting Files']['sections']["SUID - Check easy privesc, exploits and write perms"]["lines"]

        # Get the vulnerable binary from data based on color and split to get relevent info
        for index in range(len(data)):
            for keys, values in data[index]['colors'].items():
                if ((keys == 'RED') or (keys == 'REDYELLOW') or (keys == 'YELLOW')):
                    x = values[0].split('  ', 1)
                    result.append(x[0])

        # Save result
        target_loc = f"{os.getcwd()}/targets/{self._target}/results"
        with open(f"{target_loc}/binsexploits_result.json", "w+") as f:
            f.write(json.dumps(result, indent=4))
        
    def parse(self):
        # Not needed
        pass

    def init(self):
        # Load result from linpeas
        self.linpeas_res = get_linpeas_result(self._target)
