#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from datetime import datetime
from core.constants import RunStatus
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, DateTime, Enum, VARCHAR

Base = declarative_base()


class Run(Base):
    __tablename__ = "run"

    id = Column(
        Integer, primary_key=True, unique=True, autoincrement=True
    )  # Id in database
    date = Column(DateTime(timezone=True), default=datetime.utcnow)  # Date of run
    finished = Column(DateTime(timezone=True), default=None)
    scan_id = Column(VARCHAR(length=10), unique=True)  # Scan id
    target = Column(VARCHAR(length=255))
    regression_total = Column(Integer, default=0)  # Total regression tests in the run

    # Regression run status
    regression = Column(Enum(RunStatus), default=RunStatus.PENDING)

    # Internal run status
    internal_ig = Column(Enum(RunStatus), default=RunStatus.PENDING)
    internal_va = Column(Enum(RunStatus), default=RunStatus.PENDING)
    internal_ex = Column(Enum(RunStatus), default=RunStatus.PENDING)

    # External run status
    external_ig = Column(Enum(RunStatus), default=RunStatus.PENDING)
    external_va = Column(Enum(RunStatus), default=RunStatus.PENDING)
    external_ex = Column(Enum(RunStatus), default=RunStatus.PENDING)
