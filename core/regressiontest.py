#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from abc import ABC, abstractmethod
import logging

logger = logging.getLogger(__name__)

'''
Abstract class for RegressionTests
'''
class RegressionTest(ABC):
    def __init__(self, result, session):
        self.result = result
        self._session = session
    
    def set_data(self, data):
        self.data = data

    def log(self, message, type = "info"):
        m_message = f"[{self.__class__.__name__}] {message}"

        if type == "info":
            logger.info(m_message)
        elif type == "error":
            logger.error(m_message)
        elif type == "debug":
            logger.debug(m_message)
        elif type == "warn":
            logger.warn(m_message)

    @abstractmethod
    def check():
        pass

    @abstractmethod
    def run():
        pass

    @abstractmethod
    def parse():
        pass

    @abstractmethod
    def get_result():
        pass